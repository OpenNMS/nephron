version: 2.1

executors:
  docs-executor:
    docker:
      - image: antora/antora:2.3.4
jobs:
  build:
    machine:
      image: ubuntu-2004:202010-01
      resource_class: large

    environment:
      MAVEN_OPTS: -Xmx2048m
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64

    steps:
      # Disabled while submodules are used
      # Restore source cache
      #      - restore_cache:
      #          keys:
      #            - source-v1-{{ .Branch }}-{{ .Revision }}
      #            - source-v1-{{ .Branch }}-
      #            - source-v1-

      - checkout

      - run: |
           git submodule sync --recursive
           git submodule update --init --recursive

      # Disabled while submodules are used
      # Save source cache
      #- save_cache:
      #    key: source-v1-{{ .Branch }}-{{ .Revision }}
      #    paths:
      #      - ".git"

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: |
           mvn dependency:resolve-plugins
           mvn dependency:go-offline || true

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: Run the tests
          command: |
            mvn -DskipITs=false verify

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - persist_to_workspace:
          root: ~/
          paths:
            - project

  deploy:
    machine:
      image: ubuntu-2004:202010-01

    environment:
      MAVEN_OPTS: -Xmx2048m
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64

    steps:
      - attach_workspace:
          at: ~/

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Deploy the artifacts
          command: |
            mvn -s .circleci.settings.xml -DskipTests deploy

  build-docs:
    executor: docs-executor
    steps:
      - checkout
      - run:
          name: Install Antora LUNR site generator
          command: |
            npm i -g antora-site-generator-lunr
      - run:
          name: Generate HTML output for documentation
          command: |
            DOCSEARCH_INDEX_VERSION=latest DOCSEARCH_ENABLED=true DOCSEARCH_ENGINE=lunr NODE_PATH="$(npm -g root)" node --optimize-for-size $(which antora) --generator antora-site-generator-lunr --stacktrace generate antora-playbook-local.yml
      - store_artifacts:
          path: build/site.zip
          destination: site.zip
      - persist_to_workspace:
          root: ~/
          paths:
            - project/public
            - project/build

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - build-docs
      - deploy:
          context: OSSRH Principal
          requires:
            - build
          filters:
            branches:
              only:
               - master
